name: Build and Deploy via FTP

on:
    push:
        branches:
            - main

jobs:
    build-and-deploy:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout repository
              uses: actions/checkout@v3

            - name: Set up Node.js
              uses: actions/setup-node@v3
              with:
                  node-version: '20'

            # WICHTIG: npm install statt npm ci verwenden, da package-lock.json fehlt
            - name: Install dependencies
              run: npm install

            - name: Generate updated time
              run: cat ./src/updatedTime.js

            - name: Generate .env file
              run: |
                  echo "WEBHOOK_BASE=${{ secrets.WEBHOOK_BASE }}" > .env.production
                  echo "WEBHOOK_TEST_BASE=${{ secrets.WEBHOOK_TEST_BASE }}" >> .env.production
                  echo "API_TIMEOUT=10000" >> .env.production

            - name: Build
              run: npm run build
              env:
                  NODE_ENV: production

            - name: Create .htaccess file
              run: |
                  cat > build/.htaccess << 'EOL'
                  # Enable rewriting
                  RewriteEngine On

                  # Force HTTPS (wichtig fÃ¼r Social Sharing)
                  RewriteCond %{HTTPS} off
                  RewriteRule ^(.*)$ https://%{HTTP_HOST}/$1 [R=301,L]

                  # Redirect root to /en for better SEO
                  RewriteRule ^$ /en/ [R=301,L]

                  # Social Media Bot Detection und Prerendering
                  RewriteCond %{HTTP_USER_AGENT} (facebookexternalhit|Facebot|Twitterbot|LinkedInBot|WhatsApp|TelegramBot|Slackbot|Discordbot|Signal|embedly|quora|outbrain|pinterest|vkShare|W3C_Validator) [NC]
                  RewriteCond %{REQUEST_URI} !^/api
                  RewriteCond %{REQUEST_FILENAME} !-f
                  RewriteRule ^(.*)$ /social-preview.php?path=$1 [L]

                  # Regular SPA routing
                  RewriteCond %{REQUEST_FILENAME} !-f
                  RewriteCond %{REQUEST_FILENAME} !-d
                  RewriteRule ^ index.html [QSA,L]

                  # Security Headers
                  <IfModule mod_headers.c>
                      Header set X-Content-Type-Options "nosniff"
                      Header set X-Frame-Options "SAMEORIGIN"
                      Header set X-XSS-Protection "1; mode=block"
                      Header set Referrer-Policy "strict-origin-when-cross-origin"
                      Header set Permissions-Policy "geolocation=(), microphone=(), camera=()"
                  </IfModule>

                  # Set correct content type for JavaScript modules
                  <IfModule mod_mime.c>
                      AddType application/javascript .js
                      AddType text/css .css
                      AddType image/webp .webp
                      AddCharset UTF-8 .html .css .js
                  </IfModule>

                  # Compression
                  <IfModule mod_deflate.c>
                      AddOutputFilterByType DEFLATE text/html text/plain text/xml application/xml application/xhtml+xml text/javascript text/css application/javascript application/x-javascript image/svg+xml
                  </IfModule>

                  # Caching with shorter times for HTML
                  <IfModule mod_expires.c>
                      ExpiresActive On
                      
                      # HTML - kurze Cache-Zeit fÃ¼r Updates
                      ExpiresByType text/html "access plus 1 hour"
                      ExpiresByType application/xhtml+xml "access plus 1 hour"
                      
                      # CSS und JavaScript - lÃ¤ngere Cache-Zeit
                      ExpiresByType text/css "access plus 1 month"
                      ExpiresByType application/javascript "access plus 1 month"
                      
                      # Bilder - sehr lange Cache-Zeit
                      ExpiresByType image/jpeg "access plus 1 year"
                      ExpiresByType image/png "access plus 1 year"
                      ExpiresByType image/gif "access plus 1 year"
                      ExpiresByType image/svg+xml "access plus 1 year"
                      ExpiresByType image/webp "access plus 1 year"
                      ExpiresByType image/x-icon "access plus 1 year"
                      ExpiresByType image/vnd.microsoft.icon "access plus 1 year"
                      
                      # Fonts
                      ExpiresByType font/ttf "access plus 1 year"
                      ExpiresByType font/woff "access plus 1 year"
                      ExpiresByType font/woff2 "access plus 1 year"
                      ExpiresByType font/eot "access plus 1 year"
                      ExpiresByType font/otf "access plus 1 year"
                      
                      # Manifest und JSON
                      ExpiresByType application/manifest+json "access plus 1 week"
                      ExpiresByType application/json "access plus 1 day"
                  </IfModule>

                  # Cache-Control Headers
                  <IfModule mod_headers.c>
                      # Versionierte Assets kÃ¶nnen lange gecacht werden
                      <FilesMatch "\.(css|js|woff2?|ttf|eot|otf)$">
                          Header set Cache-Control "public, max-age=31536000, immutable"
                      </FilesMatch>
                      
                      # Bilder
                      <FilesMatch "\.(jpg|jpeg|png|gif|svg|webp|ico)$">
                          Header set Cache-Control "public, max-age=31536000"
                      </FilesMatch>
                      
                      # HTML sollte revalidiert werden
                      <FilesMatch "\.(html)$">
                          Header set Cache-Control "no-cache, must-revalidate"
                      </FilesMatch>
                  </IfModule>
                  EOL

            - name: List build directory contents
              run: ls -R build

            - name: ðŸ“‚ Sync files
              uses: SamKirkland/FTP-Deploy-Action@v4.3.4
              with:
                  server: ${{ secrets.HOST }}
                  username: ${{ secrets.USERNAME }}
                  password: ${{ secrets.PASSWORD }}
                  server-dir: ${{ secrets.SERVERDIR }}
                  local-dir: ./build/
                  exclude: |
                      **/.git*
                      **/.git*/**
                      **/node_modules/**
                  log-level: verbose
