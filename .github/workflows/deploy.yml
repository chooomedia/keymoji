name: Build and Deploy via FTP

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      NODE_ENV: production
      NODE_VERSION: '20'

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    # Explizites Löschen und Neuinstallieren
    - name: Clean install
      run: |
        rm -rf node_modules
        rm -f package-lock.json
        npm cache clean --force
        npm install
        npm install webpack-merge@5.7.3 --save-exact

    # Verify installations
    - name: Verify critical dependencies
      run: |
        echo "Node version: $(node -v)"
        echo "NPM version: $(npm -v)"
        npm list webpack webpack-cli webpack-merge

    - name: Generate updated time
      run: |
        echo "export const updatedTime = '$(date -u +"%Y-%m-%dT%H:%M:%SZ")';" > ./src/updatedTime.js

    # Build mit zusätzlicher Fehlerbehandlung
    - name: Build
      run: |
        echo "Starting build process..."
        export NODE_OPTIONS="--max-old-space-size=4096"
        npm run build || {
          echo "Build failed. Showing webpack config:"
          cat webpack/build.js
          exit 1
        }
      env:
        NODE_ENV: production
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        API_URL: ${{ secrets.API_URL }}

    - name: Validate build
      run: |
        if [ ! -d "build" ]; then
          echo "Build directory is missing!"
          exit 1
        fi
        echo "Build directory contents:"
        ls -la build/

    - name: Deploy via FTP
      if: success()
      uses: SamKirkland/FTP-Deploy-Action@v4.3.4
      with:
        server: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        password: ${{ secrets.PASSWORD }}
        server-dir: ${{ secrets.SERVERDIR }}
        local-dir: ./build/
        exclude: |
          **/.git*
          **/.git*/**
          **/node_modules/**
          **/*.map
          **/.DS_Store
        log-level: verbose
        dangerous-clean-slate: false

    - name: Cleanup
      if: always()
      run: |
        rm -rf build
        rm -f .env

    # Füge Artefakt-Upload für Debug-Zwecke hinzu
    - name: Upload build logs
      if: failure()
      uses: actions/upload-artifact@v3
      with:
        name: build-logs
        path: |
          npm-debug.log*
          yarn-debug.log*
          yarn-error.log*
          webpack/build.js