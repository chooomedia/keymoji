name: Build and Deploy via FTP

on:
    push:
        branches:
            - main

jobs:
    build-and-deploy:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Set up Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: '20'
                  cache: 'npm'

            # WICHTIG: npm install statt npm ci verwenden, da package-lock.json fehlt
            - name: Install dependencies
              run: npm install

            - name: Generate updated time
              run: cat ./src/utils/timestamp.js

            - name: Generate .env file
              run: |
                  echo "WEBHOOK_BASE=${{ secrets.WEBHOOK_BASE }}" > .env.production
                  echo "WEBHOOK_TEST_BASE=${{ secrets.WEBHOOK_TEST_BASE }}" >> .env.production
                  echo "API_TIMEOUT=10000" >> .env.production

            - name: Build
              run: npm run build
              env:
                  NODE_ENV: production

            - name: Create .htaccess file
              run: |
                  cat > build/.htaccess << 'EOL'
                  # Enable rewriting
                  RewriteEngine On

                  # Force HTTPS (wichtig für Social Sharing)
                  RewriteCond %{HTTPS} off
                  RewriteRule ^(.*)$ https://%{HTTP_HOST}/$1 [R=301,L]

                  # Redirect root to /en for better SEO
                  RewriteRule ^$ /en/ [R=301,L]

                  # Social Media Bot Detection und Prerendering
                  RewriteCond %{HTTP_USER_AGENT} (facebookexternalhit|Facebot|Twitterbot|LinkedInBot|WhatsApp|TelegramBot|Slackbot|Discordbot|Signal|embedly|quora|outbrain|pinterest|vkShare|W3C_Validator) [NC]
                  RewriteCond %{REQUEST_URI} !^/api
                  RewriteCond %{REQUEST_FILENAME} !-f
                  RewriteRule ^(.*)$ /social-preview.php?path=$1 [L]

                  # Regular SPA routing
                  RewriteCond %{REQUEST_FILENAME} !-f
                  RewriteCond %{REQUEST_FILENAME} !-d
                  RewriteRule ^ index.html [QSA,L]

                  # Security Headers
                  <IfModule mod_headers.c>
                      Header set X-Content-Type-Options "nosniff"
                      Header set X-Frame-Options "SAMEORIGIN"
                      Header set X-XSS-Protection "1; mode=block"
                      Header set Referrer-Policy "strict-origin-when-cross-origin"
                      Header set Permissions-Policy "geolocation=(), microphone=(), camera=()"
                      
                      # SEO-optimierte Headers
                      Header set X-Robots-Tag "index, follow"
                      Header set X-Sitemap-Location "https://keymoji.wtf/sitemap.xml"
                      
                      # Performance Headers
                      Header set X-DNS-Prefetch-Control "on"
                      Header set X-Download-Options "noopen"
                      Header set X-Permitted-Cross-Domain-Policies "none"
                  </IfModule>

                  # Set correct content type for JavaScript modules
                  <IfModule mod_mime.c>
                      AddType application/javascript .js
                      AddType text/css .css
                      AddType image/webp .webp
                      AddCharset UTF-8 .html .css .js
                  </IfModule>

                  # Compression
                  <IfModule mod_deflate.c>
                      AddOutputFilterByType DEFLATE text/html text/plain text/xml application/xml application/xhtml+xml text/javascript text/css application/javascript application/x-javascript image/svg+xml
                  </IfModule>

                  # Caching with shorter times for HTML
                  <IfModule mod_expires.c>
                      ExpiresActive On
                      
                      # HTML - kurze Cache-Zeit für Updates
                      ExpiresByType text/html "access plus 1 hour"
                      ExpiresByType application/xhtml+xml "access plus 1 hour"
                      
                      # CSS und JavaScript - längere Cache-Zeit
                      ExpiresByType text/css "access plus 1 month"
                      ExpiresByType application/javascript "access plus 1 month"
                      
                      # Bilder - sehr lange Cache-Zeit
                      ExpiresByType image/jpeg "access plus 1 year"
                      ExpiresByType image/png "access plus 1 year"
                      ExpiresByType image/gif "access plus 1 year"
                      ExpiresByType image/svg+xml "access plus 1 year"
                      ExpiresByType image/webp "access plus 1 year"
                      ExpiresByType image/x-icon "access plus 1 year"
                      ExpiresByType image/vnd.microsoft.icon "access plus 1 year"
                      
                      # Fonts
                      ExpiresByType font/ttf "access plus 1 year"
                      ExpiresByType font/woff "access plus 1 year"
                      ExpiresByType font/woff2 "access plus 1 year"
                      ExpiresByType font/eot "access plus 1 year"
                      ExpiresByType font/otf "access plus 1 year"
                      
                      # Manifest und JSON
                      ExpiresByType application/manifest+json "access plus 1 week"
                      ExpiresByType application/json "access plus 1 day"
                  </IfModule>

                  # Cache-Control Headers
                  <IfModule mod_headers.c>
                      # Versionierte Assets können lange gecacht werden
                      <FilesMatch "\.(css|js|woff2?|ttf|eot|otf)$">
                          Header set Cache-Control "public, max-age=31536000, immutable"
                      </FilesMatch>
                      
                      # Bilder
                      <FilesMatch "\.(jpg|jpeg|png|gif|svg|webp|ico)$">
                          Header set Cache-Control "public, max-age=31536000"
                      </FilesMatch>
                      
                      # HTML sollte revalidiert werden
                      <FilesMatch "\.(html)$">
                          Header set Cache-Control "no-cache, must-revalidate"
                      </FilesMatch>
                      
                      # SEO-optimierte Cache-Headers
                      <FilesMatch "\.(xml|txt)$">
                          Header set Cache-Control "public, max-age=86400"
                      </FilesMatch>
                  </IfModule>
                  EOL

            - name: Create social-preview.php
              run: |
                  cat > build/social-preview.php << 'EOL'
                  <?php
                  // Social Media Preview Generator
                  header('Content-Type: text/html; charset=utf-8');

                  $path = $_GET['path'] ?? '';
                  $userAgent = $_SERVER['HTTP_USER_AGENT'] ?? '';

                  // SEO-optimierte Meta-Daten basierend auf Pfad
                  $seoData = [
                      '/' => [
                          'title' => 'Keymoji - Emoji Password Generator',
                          'description' => 'Generate secure, AI-resistant emoji passwords. Create memorable passwords with emojis in 15+ languages.',
                          'image' => '/images/keymoji-social-media-banner-10-2024-min.png'
                      ],
                      '/versions' => [
                          'title' => 'Keymoji Version History & Updates',
                          'description' => 'Track the development and updates of Keymoji. See new features, improvements, and bug fixes in each version.',
                          'image' => '/images/keymoji-social-media-banner-10-2024-min.png'
                      ],
                      '/contact' => [
                          'title' => 'Contact Keymoji - Get in Touch',
                          'description' => 'Have questions or feedback about Keymoji? Contact us for support, suggestions, or collaboration.',
                          'image' => '/images/keymoji-social-media-banner-10-2024-min.png'
                      ],
                      '/blog' => [
                          'title' => 'Keymoji Blog - Password Security & Tips',
                          'description' => 'Learn about emoji passwords, security tips, and updates from Keymoji. Stay informed about the latest in password security.',
                          'image' => '/images/keymoji-social-media-banner-10-2024-min.png'
                      ]
                  ];

                  $data = $seoData[$path] ?? $seoData['/'];
                  $baseUrl = 'https://keymoji.wtf';
                  $canonicalUrl = $baseUrl . $path;
                  $imageUrl = $baseUrl . $data['image'];

                  echo '<!DOCTYPE html>
                  <html lang="en">
                  <head>
                      <meta charset="UTF-8">
                      <meta name="viewport" content="width=device-width, initial-scale=1.0">
                      <title>' . htmlspecialchars($data['title']) . '</title>
                      <meta name="description" content="' . htmlspecialchars($data['description']) . '">
                      <meta property="og:title" content="' . htmlspecialchars($data['title']) . '">
                      <meta property="og:description" content="' . htmlspecialchars($data['description']) . '">
                      <meta property="og:image" content="' . htmlspecialchars($imageUrl) . '">
                      <meta property="og:url" content="' . htmlspecialchars($canonicalUrl) . '">
                      <meta property="og:type" content="website">
                      <meta property="twitter:card" content="summary_large_image">
                      <meta property="twitter:title" content="' . htmlspecialchars($data['title']) . '">
                      <meta property="twitter:description" content="' . htmlspecialchars($data['description']) . '">
                      <meta property="twitter:image" content="' . htmlspecialchars($imageUrl) . '">
                      <link rel="canonical" href="' . htmlspecialchars($canonicalUrl) . '">
                      <style>
                          body { font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, sans-serif; margin: 0; padding: 20px; background: #253852; color: white; }
                          .container { max-width: 600px; margin: 0 auto; text-align: center; }
                          .logo { font-size: 3rem; margin-bottom: 1rem; }
                          .title { font-size: 2rem; margin-bottom: 1rem; font-weight: bold; }
                          .description { font-size: 1.2rem; line-height: 1.6; margin-bottom: 2rem; opacity: 0.9; }
                          .cta { background: #f4ab25; color: #000; padding: 15px 30px; border-radius: 8px; text-decoration: none; font-weight: bold; display: inline-block; }
                      </style>
                  </head>
                  <body>
                      <div class="container">
                          <div class="logo">🔑</div>
                          <h1 class="title">' . htmlspecialchars($data['title']) . '</h1>
                          <p class="description">' . htmlspecialchars($data['description']) . '</p>
                          <a href="' . htmlspecialchars($canonicalUrl) . '" class="cta">Visit Keymoji</a>
                      </div>
                  </body>
                  </html>';
                  EOL

            - name: List build directory contents
              run: ls -R build

            - name: 📂 Sync files
              uses: SamKirkland/FTP-Deploy-Action@v4.3.4
              with:
                  server: ${{ secrets.HOST }}
                  username: ${{ secrets.USERNAME }}
                  password: ${{ secrets.PASSWORD }}
                  server-dir: ${{ secrets.SERVERDIR }}
                  local-dir: ./build/
                  exclude: |
                      **/.git*
                      **/.git*/**
                      **/node_modules/**
                  log-level: verbose
