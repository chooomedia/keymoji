{
    "nodes": [
        {
            "parameters": {
                "content": "## Account Management\n",
                "height": 688,
                "width": 1888
            },
            "type": "n8n-nodes-base.stickyNote",
            "typeVersion": 1,
            "position": [
                -352,
                832
            ],
            "id": "42215759-58f8-43c9-8135-99e5c4817253",
            "name": "Sticky Note1"
        },
        {
            "parameters": {
                "jsCode": "// Validate input data - n8n webhook format\nconst webhookData = $input.first().json;\n\n// Log incoming webhook data for debugging\nconsole.log('=== INCOMING WEBHOOK DATA ===');\nconsole.log('Raw webhook data:', JSON.stringify(webhookData, null, 2));\n\n// Extract body from webhook data\nconst data = webhookData.body || webhookData;\n\nconsole.log('=== EXTRACTED BODY DATA ===');\nconsole.log('Body data:', JSON.stringify(data, null, 2));\nconsole.log('Data type:', typeof data);\nconsole.log('Data keys:', Object.keys(data || {}));\nconsole.log('Action:', data?.action);\nconsole.log('UserId:', data?.userId);\nconsole.log('Email:', data?.email);\nconsole.log('Profile:', data?.profile);\nconsole.log('Metadata:', data?.metadata);\nconsole.log('Timestamp:', data?.timestamp);\nconsole.log('==========================');\n\n// Check required fields with better error messages\nif (!data?.action) {\n  console.log('❌ Missing action field');\n  throw new Error('Missing required field: action');\n}\n\nif (!data?.userId) {\n  console.log('❌ Missing userId field');\n  throw new Error('Missing required field: userId');\n}\n\n// Validate action\nconst validActions = ['create', 'update', 'get', 'delete'];\nif (!validActions.includes(data.action)) {\n  console.log('❌ Invalid action:', data.action);\n  throw new Error(`Invalid action: ${data.action}. Must be one of: ${validActions.join(', ')}`);\n}\n\n// Sanitize and prepare data\nconst sanitizedData = {\n  action: data.action,\n  userId: data.userId,\n  email: data.email || '',\n  profile: data.profile || {},\n  metadata: data.metadata || {},\n  timestamp: data.timestamp || Date.now()\n};\n\nconsole.log('✅ Data validation passed');\nconsole.log('Sanitized data:', JSON.stringify(sanitizedData, null, 2));\n\nreturn { json: sanitizedData };"
            },
            "id": "d19c3ea0-0cac-4fc9-a2b7-2b67a0f5bc3f",
            "name": "Validate Data",
            "type": "n8n-nodes-base.code",
            "typeVersion": 2,
            "position": [
                -64,
                1168
            ]
        },
        {
            "parameters": {
                "httpMethod": "POST",
                "path": "xn--moji-pb73c-account",
                "responseMode": "responseNode",
                "options": {
                    "responseHeaders": {
                        "entries": [
                            {
                                "name": "Access-Control-Allow-Origin",
                                "value": "*"
                            },
                            {
                                "name": "Access-Control-Allow-Headers",
                                "value": "Content-Type, Origin, Accept"
                            },
                            {
                                "name": "Access-Control-Allow-Methods",
                                "value": "POST, OPTIONS, GET"
                            },
                            {
                                "name": "Access-Control-Allow-Credentials",
                                "value": "true"
                            }
                        ]
                    }
                }
            },
            "id": "ff47b759-357e-49f3-acfd-1000287d2f0e",
            "name": "Account Webhook1",
            "type": "n8n-nodes-base.webhook",
            "typeVersion": 1,
            "position": [
                -288,
                1168
            ],
            "webhookId": "account-webhook"
        },
        {
            "parameters": {
                "conditions": {
                    "options": {
                        "caseSensitive": true,
                        "leftValue": "",
                        "typeValidation": "strict"
                    },
                    "conditions": [
                        {
                            "id": "action-check",
                            "leftValue": "={{ $json.action }}",
                            "rightValue": "create",
                            "operator": {
                                "type": "string",
                                "operation": "equals"
                            }
                        }
                    ],
                    "combinator": "and"
                },
                "options": {}
            },
            "id": "dbd548c6-d223-4570-b066-c23d78000d34",
            "name": "Route by Action5",
            "type": "n8n-nodes-base.if",
            "typeVersion": 2,
            "position": [
                160,
                1168
            ]
        },
        {
            "parameters": {
                "jsCode": "// Create new account\nconst data = $input.first().json;\nconst now = new Date().toISOString();\n\nconst newAccount = {\n  userId: data.userId,\n  email: data.email,\n  tier: 'free',\n  createdAt: now,\n  lastLogin: now,\n  profile: data.profile,\n  metadata: data.metadata,\n  status: 'active'\n};\n\nconsole.log('Creating account:', JSON.stringify(newAccount, null, 2));\n\nreturn { json: newAccount };"
            },
            "id": "43af590e-5e14-4518-9d0b-bfeb831c1f9d",
            "name": "Create Account1",
            "type": "n8n-nodes-base.code",
            "typeVersion": 2,
            "position": [
                368,
                1072
            ]
        },
        {
            "parameters": {
                "operation": "append",
                "documentId": {
                    "__rl": true,
                    "value": "1VvcsyNMhDmY4FSa3Yl0ZY4oHOPu0BATN2NXyGn_yDLs",
                    "mode": "list",
                    "cachedResultName": "keymoji",
                    "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1VvcsyNMhDmY4FSa3Yl0ZY4oHOPu0BATN2NXyGn_yDLs/edit?usp=drivesdk"
                },
                "sheetName": {
                    "__rl": true,
                    "value": 1278731717,
                    "mode": "list",
                    "cachedResultName": "accounts",
                    "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1VvcsyNMhDmY4FSa3Yl0ZY4oHOPu0BATN2NXyGn_yDLs/edit#gid=1278731717"
                },
                "columns": {
                    "mappingMode": "autoMapInputData",
                    "value": {},
                    "matchingColumns": [],
                    "schema": [
                        {
                            "id": "UserID",
                            "displayName": "UserID",
                            "required": false,
                            "defaultMatch": false,
                            "display": true,
                            "type": "string",
                            "canBeUsedToMatch": true
                        },
                        {
                            "id": "Email",
                            "displayName": "Email",
                            "required": false,
                            "defaultMatch": false,
                            "display": true,
                            "type": "string",
                            "canBeUsedToMatch": true
                        },
                        {
                            "id": "Tier",
                            "displayName": "Tier",
                            "required": false,
                            "defaultMatch": false,
                            "display": true,
                            "type": "string",
                            "canBeUsedToMatch": true
                        },
                        {
                            "id": "CreatedAt",
                            "displayName": "CreatedAt",
                            "required": false,
                            "defaultMatch": false,
                            "display": true,
                            "type": "string",
                            "canBeUsedToMatch": true
                        },
                        {
                            "id": "LastLogin",
                            "displayName": "LastLogin",
                            "required": false,
                            "defaultMatch": false,
                            "display": true,
                            "type": "string",
                            "canBeUsedToMatch": true
                        },
                        {
                            "id": "Profile",
                            "displayName": "Profile",
                            "required": false,
                            "defaultMatch": false,
                            "display": true,
                            "type": "string",
                            "canBeUsedToMatch": true
                        },
                        {
                            "id": "Status",
                            "displayName": "Status",
                            "required": false,
                            "defaultMatch": false,
                            "display": true,
                            "type": "string",
                            "canBeUsedToMatch": true
                        },
                        {
                            "id": "Metadata",
                            "displayName": "Metadata",
                            "required": false,
                            "defaultMatch": false,
                            "display": true,
                            "type": "string",
                            "canBeUsedToMatch": true
                        }
                    ],
                    "attemptToConvertTypes": false,
                    "convertFieldsToString": false
                },
                "options": {}
            },
            "id": "2abedd74-2006-4eeb-b727-f79bef01034f",
            "name": "Save Account1",
            "type": "n8n-nodes-base.googleSheets",
            "typeVersion": 4,
            "position": [
                592,
                1072
            ],
            "credentials": {
                "googleSheetsOAuth2Api": {
                    "id": "SjlKGbio83VCvDmo",
                    "name": "Google Sheets account"
                }
            }
        },
        {
            "parameters": {
                "documentId": {
                    "__rl": true,
                    "value": "1VvcsyNMhDmY4FSa3Yl0ZY4oHOPu0BATN2NXyGn_yDLs",
                    "mode": "list",
                    "cachedResultName": "keymoji",
                    "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1VvcsyNMhDmY4FSa3Yl0ZY4oHOPu0BATN2NXyGn_yDLs/edit?usp=drivesdk"
                },
                "sheetName": {
                    "__rl": true,
                    "value": 1278731717,
                    "mode": "list",
                    "cachedResultName": "accounts",
                    "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1VvcsyNMhDmY4FSa3Yl0ZY4oHOPu0BATN2NXyGn_yDLs/edit#gid=1278731717"
                },
                "options": {}
            },
            "id": "09f253f8-6d32-4523-b42e-32eb354d4bd9",
            "name": "Read Accounts1",
            "type": "n8n-nodes-base.googleSheets",
            "typeVersion": 4,
            "position": [
                368,
                1264
            ],
            "credentials": {
                "googleSheetsOAuth2Api": {
                    "id": "SjlKGbio83VCvDmo",
                    "name": "Google Sheets account"
                }
            }
        },
        {
            "parameters": {
                "jsCode": "// Find account by userId\nconst data = $input.first().json;\nconst accounts = $input.all();\nconst userId = data.userId;\n\nconsole.log('Looking for userId:', userId);\nconsole.log('Available accounts:', accounts.length);\n\n// Find account\nconst account = accounts.find(acc => acc.userId === userId);\n\nif (!account) {\n  console.log('Account not found for userId:', userId);\n  throw new Error(`Account not found for userId: ${userId}`);\n}\n\nconsole.log('Found account:', JSON.stringify(account, null, 2));\n\nreturn { json: account };"
            },
            "id": "e794b43f-e83b-4baf-9166-c52ae94d1b88",
            "name": "Find Account1",
            "type": "n8n-nodes-base.code",
            "typeVersion": 2,
            "position": [
                592,
                1264
            ]
        },
        {
            "parameters": {
                "jsCode": "// Update account\nconst data = $input.first().json;\nconst account = data.account;\nconst updates = data.updates;\n\n// Update fields\nconst updatedAccount = {\n  ...account,\n  ...updates,\n  lastLogin: new Date().toISOString()\n};\n\nconsole.log('Updated account:', JSON.stringify(updatedAccount, null, 2));\n\nreturn { json: updatedAccount };"
            },
            "id": "f81fb3d0-c7e1-419b-8d4c-c844384ac625",
            "name": "Update Account1",
            "type": "n8n-nodes-base.code",
            "typeVersion": 2,
            "position": [
                816,
                1264
            ]
        },
        {
            "parameters": {
                "respondWith": "json",
                "responseBody": "={\n  \"success\": true,\n  \"account\": {{ $json }},\n  \"message\": \"Account created successfully\",\n  \"timestamp\": \"{{ new Date().toISOString() }}\"\n}",
                "options": {}
            },
            "id": "e6773126-a5e9-4aad-84b9-f6e8b57731be",
            "name": "Create Response2",
            "type": "n8n-nodes-base.respondToWebhook",
            "typeVersion": 1,
            "position": [
                816,
                1072
            ]
        },
        {
            "parameters": {
                "respondWith": "json",
                "responseBody": "={\n  \"success\": true,\n  \"account\": {{ $json }},\n  \"message\": \"Account retrieved successfully\",\n  \"timestamp\": \"{{ new Date().toISOString() }}\"\n}",
                "options": {}
            },
            "id": "10eb106b-a811-4737-9822-c1cfccded483",
            "name": "Get Response2",
            "type": "n8n-nodes-base.respondToWebhook",
            "typeVersion": 1,
            "position": [
                1040,
                1264
            ]
        },
        {
            "parameters": {
                "respondWith": "json",
                "responseBody": "={\n  \"success\": true,\n  \"account\": {{ $json }},\n  \"message\": \"Account updated successfully\",\n  \"timestamp\": \"{{ new Date().toISOString() }}\"\n}",
                "options": {}
            },
            "id": "b5582034-15d0-4094-b2f3-520a0081bdb3",
            "name": "Update Response1",
            "type": "n8n-nodes-base.respondToWebhook",
            "typeVersion": 1,
            "position": [
                1040,
                1072
            ]
        }
    ],
    "connections": {
        "Validate Data": {
            "main": [
                [
                    {
                        "node": "Route by Action5",
                        "type": "main",
                        "index": 0
                    }
                ]
            ]
        },
        "Account Webhook1": {
            "main": [
                [
                    {
                        "node": "Validate Data",
                        "type": "main",
                        "index": 0
                    }
                ]
            ]
        },
        "Route by Action5": {
            "main": [
                [
                    {
                        "node": "Create Account1",
                        "type": "main",
                        "index": 0
                    }
                ],
                [
                    {
                        "node": "Read Accounts1",
                        "type": "main",
                        "index": 0
                    }
                ]
            ]
        },
        "Create Account1": {
            "main": [
                [
                    {
                        "node": "Save Account1",
                        "type": "main",
                        "index": 0
                    }
                ]
            ]
        },
        "Save Account1": {
            "main": [
                [
                    {
                        "node": "Create Response2",
                        "type": "main",
                        "index": 0
                    }
                ]
            ]
        },
        "Read Accounts1": {
            "main": [
                [
                    {
                        "node": "Find Account1",
                        "type": "main",
                        "index": 0
                    }
                ]
            ]
        },
        "Find Account1": {
            "main": [
                [
                    {
                        "node": "Get Response2",
                        "type": "main",
                        "index": 0
                    }
                ]
            ]
        },
        "Update Account1": {
            "main": [
                [
                    {
                        "node": "Update Response1",
                        "type": "main",
                        "index": 0
                    }
                ]
            ]
        }
    },
    "pinData": {},
    "meta": {
        "templateCredsSetupCompleted": true,
        "instanceId": "3dae61a0a24f0b093f057680559772c3c73ec97ec47a9bd2a5ad745c7d8f0365"
    }
}